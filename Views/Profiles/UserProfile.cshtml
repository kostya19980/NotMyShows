@model NotMyShows.ViewModel.UserProfileViewModel
@{
    ViewData["Title"] = "UserProfile";
}
<link rel="stylesheet" href="~/css/UserProfile.css" />
<link rel="stylesheet" href="~/css/SeriesSearch.css" />
@if (User.Identity.IsAuthenticated)
{
    <form method="post" asp-controller="Account" asp-action="Logout">
        <input type="submit" value="Выход" />
    </form>
}
<div class="profile-container">
    <div class="user-info">
        <div class="user-avatar">
            <label for="upload-image">
                <img id="avatar-img" src="\@Html.Raw(Model.ImageSrc)" />
            </label>
            <input id="upload-image" type="file" />
        </div>
        <div class="user-info-items">
            <div class="user-name-container">
                <div class="user-name">
                    @Model.UserName
                </div>
                <div class="user-raiting">
                    +11777
                </div>
            </div>
                @if (!Model.IsProfileOwner)
                {
                    <button class="remove-friend-button" value="@Model.Id">
                        В друзьях
                        <svg>
                            <use xlink:href="/Icons/outline/20/x.svg#x_icon"></use>
                        </svg>
                    </button>
                    <button class="add-friend-button" value="@Model.Id">
                        <svg>
                            <use xlink:href="/Icons/plus.svg#plus_icon"></use>
                        </svg>
                        В друзья
                    </button>
                    if (!Model.IsFriend)
                    {
                        <script>
                            document.addEventListener("DOMContentLoaded", function () {
                                $(".add-friend-button").css("display", "flex");
                            });
                        </script>
                    }
                    else
                    {
                        <script>
                            document.addEventListener("DOMContentLoaded", function () {
                                $(".remove-friend-button").css("display", "flex");
                            });
                        </script>
                    }
                }
        </div>
    </div>
    <div class="separator">

    </div>
    <div class="user-stats">
        <div class="stat-item">
            <div class="stat-number">
                @Model.ProfileStats.EpisodesCount.ToString("N0")
            </div>
            <div class="stat-name">
                Просмотрено эпизодов
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-number">
                @Model.ProfileStats.SeriesCount.ToString("N0")
            </div>
            <div class="stat-name">
                Просмотрено сериалов
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-number">
                @Model.ProfileStats.HoursSpent.ToString("N0")
            </div>
            <div class="stat-name">
                Потрачено часов
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-number">
                @((Model.ProfileStats.DaysSpent).ToString("N0"))
            </div>
            <div class="stat-name">
                Потрачено дней
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-number">
                @Model.ProfileStats.AchievementsCount
            </div>
            <div class="stat-name">
                Получено достижений
            </div>
        </div>
    </div>
</div>
<div class="user-series">
    <div class="series-tabs" data="Смотрю">
        @foreach (var item in Model.StatusTabs)
        {
            <div class="tab-item">
                <input id="@item.WatchStatus.Id" type="radio" name="radio" value="@item.WatchStatus.StatusName">
                <label for="@item.WatchStatus.Id">
                    <span class="watch-status-name">@item.WatchStatus.StatusName</span>
                    <span class="watch-status-count">@item.SeriesList.Count()</span>
                </label>
            </div>
        }
    </div>
    <div>
        @foreach (var tab in Model.StatusTabs)
        {
            <div id="@tab.WatchStatus.StatusName" class="profile-series-cards-container" style="display: none">
                @foreach (var series in tab.SeriesList)
                {
                    <a class="series-search-card profile-series-card" asp-controller="Profiles" asp-action="Series" asp-route-SeriesId="@series.Id">
                        <div class="series-cover-container">
                            <img src="\@Html.Raw(series.PicturePath)" class="series-cover" />
                            <div class="series-status" style="background-color:@series.Status.StatusColorName">
                                @series.Status.Name
                            </div>
                        </div>
                        <div class="series-titles-container">
                            <label class="series-russian-title">@series.OriginalTitle</label>
                            <label class="series-origin-title">@series.Title</label>
                        </div>
                        <div class="series-raiting-progress-container">
                            <div class="series-raiting">
                                <svg>
                                    <use xlink:href="/Icons/outline/24/star.svg#star_icon"></use>
                                </svg>
                                <div class="series-raiting-number">
                                    @series.UserRaiting
                                </div>
                            </div>
                            <div class="series-progress">
                                @{
                                    int progress = (int)(100 * ((double)series.UserEpisodes.Count() / series.EpisodesCount));
                                }
                                <progress max="100" value="@progress"></progress>
                                <div class="progress-count">@series.UserEpisodes.Count()/@series.EpisodesCount</div>
                            </div>
                        </div>
                    </a>
                }
            </div>
        }
    </div>
    <div class="user-events-container">
        <label class="profile-block-title">
            Календарь просмотров
        </label>
        <div class="user-events">
            <div class="calendar-months">

            </div>
            <div class="calendar-cells-container">
                <ul class="calendar-days">
                    <li>Пн</li>
                    <li>Вт</li>
                    <li>Ср</li>
                    <li>Чт</li>
                    <li>Пт</li>
                    <li>Сб</li>
                    <li>Вс</li>
                </ul>
                @for (int i = 0; i < 40; i++)
                {
                    <ul class="calendar-week">
                        @for (int j = 0; j < 7; j++)
                        {
                            <li class="calendar-cell">

                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
    <div class="user-events-container">
        <label class="profile-block-title">
            Лента событий
        </label>
        <div class="user-events">
            @{
                foreach (var group in Model.GroupedUserEvents)
                {
                    <label>
                        @group.Date.ToShortDateString()
                    </label>
                    <div class="day-events">
                        @foreach (var userEvent in group.UserEvents)
                        {
                            <div class="event-block">
                                <div>
                                    @Html.Raw(userEvent.GetEventText())
                                </div>
                                <div class="event-time">
                                    @userEvent.Date.ToString("HH:mm")
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        $(".tab-item > input").change(function () {
            var tabsBlock = $(".series-tabs");
            var prevTab = tabsBlock.attr("data");
            $("#" + prevTab).hide();
            var currentTab = $(this).val();
            tabsBlock.attr("data", currentTab);
            $("#" + currentTab).show();
        });
        $(".tab-item > label")[0].click();
    });
</script>